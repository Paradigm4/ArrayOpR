% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/subset_op.R
\name{SubsetOp}
\alias{SubsetOp}
\title{SubsetOp}
\description{
Subset array content by 1. filtering cells 2. select only desired dimensions/attributes
}
\details{
SubsetOp details to be added here
}
\section{Super class}{
\code{\link[arrayop:ArrayOpBase]{arrayop::ArrayOpBase}} -> \code{SubsetOp}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{SubsetOp$new()}}
\item \href{#method-.raw_afl}{\code{SubsetOp$.raw_afl()}}
\item \href{#method-select_copy}{\code{SubsetOp$select_copy()}}
\item \href{#method-clone}{\code{SubsetOp$clone()}}
}
}
\if{html}{
\out{<details ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="arrayop" data-topic="ArrayOpBase" data-id=".to_afl_explicit">}\href{../../arrayop/html/ArrayOpBase.html#method-.to_afl_explicit}{\code{arrayop::ArrayOpBase$.to_afl_explicit()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="arrayop" data-topic="ArrayOpBase" data-id="convert_df">}\href{../../arrayop/html/ArrayOpBase.html#method-convert_df}{\code{arrayop::ArrayOpBase$convert_df()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="arrayop" data-topic="ArrayOpBase" data-id="get_absent_fields">}\href{../../arrayop/html/ArrayOpBase.html#method-get_absent_fields}{\code{arrayop::ArrayOpBase$get_absent_fields()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="arrayop" data-topic="ArrayOpBase" data-id="get_field_types">}\href{../../arrayop/html/ArrayOpBase.html#method-get_field_types}{\code{arrayop::ArrayOpBase$get_field_types()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="arrayop" data-topic="ArrayOpBase" data-id="rename_fields">}\href{../../arrayop/html/ArrayOpBase.html#method-rename_fields}{\code{arrayop::ArrayOpBase$rename_fields()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="arrayop" data-topic="ArrayOpBase" data-id="to_afl">}\href{../../arrayop/html/ArrayOpBase.html#method-to_afl}{\code{arrayop::ArrayOpBase$to_afl()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="arrayop" data-topic="ArrayOpBase" data-id="to_df_afl">}\href{../../arrayop/html/ArrayOpBase.html#method-to_df_afl}{\code{arrayop::ArrayOpBase$to_df_afl()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="arrayop" data-topic="ArrayOpBase" data-id="to_join_operand_afl">}\href{../../arrayop/html/ArrayOpBase.html#method-to_join_operand_afl}{\code{arrayop::ArrayOpBase$to_join_operand_afl()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="arrayop" data-topic="ArrayOpBase" data-id="transform_unpack">}\href{../../arrayop/html/ArrayOpBase.html#method-transform_unpack}{\code{arrayop::ArrayOpBase$transform_unpack()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="arrayop" data-topic="ArrayOpBase" data-id="validate_filter_expr">}\href{../../arrayop/html/ArrayOpBase.html#method-validate_filter_expr}{\code{arrayop::ArrayOpBase$validate_filter_expr()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SubsetOp$new(
  operand,
  filter_expr = NULL,
  selected_fields = as.character(c()),
  errorTemplate = "SubsetOp missing field(s): '\%s'"
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-.raw_afl"></a>}}
\subsection{Method \code{.raw_afl()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SubsetOp$.raw_afl()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-select_copy"></a>}}
\subsection{Method \code{select_copy()}}{
Create a new SubsetOp using self as a template.

Nothing except the \code{self$selected} is changed.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SubsetOp$select_copy(fields, replace = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{fields}}{self$selected in the new SubsetOp}

\item{\code{replace}}{whehter \code{fields} replaces or supplements the \code{self$selected}}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SubsetOp$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
