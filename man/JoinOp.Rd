% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/join_op.R
\name{JoinOp}
\alias{JoinOp}
\title{Model a sql-like join oepration.}
\description{
Join on two operands whose class is SubsetOp or JoinOp. Join on another JoinOp enables multiple equi_join operations.
}
\details{
The constructor function performs validation.
}
\section{Super class}{
\code{\link[arrayop:ArrayOpBase]{arrayop::ArrayOpBase}} -> \code{JoinOp}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{JoinOp$new()}}
\item \href{#method-.raw_afl}{\code{JoinOp$.raw_afl()}}
\item \href{#method-.keep_dimensions}{\code{JoinOp$.keep_dimensions()}}
}
}
\if{html}{
\out{<details ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="arrayop" data-topic="ArrayOpBase" data-id=".to_afl_explicit">}\href{../../arrayop/html/ArrayOpBase.html#method-.to_afl_explicit}{\code{arrayop::ArrayOpBase$.to_afl_explicit()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="arrayop" data-topic="ArrayOpBase" data-id="convert_df">}\href{../../arrayop/html/ArrayOpBase.html#method-convert_df}{\code{arrayop::ArrayOpBase$convert_df()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="arrayop" data-topic="ArrayOpBase" data-id="get_absent_fields">}\href{../../arrayop/html/ArrayOpBase.html#method-get_absent_fields}{\code{arrayop::ArrayOpBase$get_absent_fields()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="arrayop" data-topic="ArrayOpBase" data-id="get_field_types">}\href{../../arrayop/html/ArrayOpBase.html#method-get_field_types}{\code{arrayop::ArrayOpBase$get_field_types()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="arrayop" data-topic="ArrayOpBase" data-id="rename_fields">}\href{../../arrayop/html/ArrayOpBase.html#method-rename_fields}{\code{arrayop::ArrayOpBase$rename_fields()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="arrayop" data-topic="ArrayOpBase" data-id="to_afl">}\href{../../arrayop/html/ArrayOpBase.html#method-to_afl}{\code{arrayop::ArrayOpBase$to_afl()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="arrayop" data-topic="ArrayOpBase" data-id="to_df_afl">}\href{../../arrayop/html/ArrayOpBase.html#method-to_df_afl}{\code{arrayop::ArrayOpBase$to_df_afl()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="arrayop" data-topic="ArrayOpBase" data-id="to_join_operand_afl">}\href{../../arrayop/html/ArrayOpBase.html#method-to_join_operand_afl}{\code{arrayop::ArrayOpBase$to_join_operand_afl()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="arrayop" data-topic="ArrayOpBase" data-id="transform_unpack">}\href{../../arrayop/html/ArrayOpBase.html#method-transform_unpack}{\code{arrayop::ArrayOpBase$transform_unpack()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="arrayop" data-topic="ArrayOpBase" data-id="validate_filter_expr">}\href{../../arrayop/html/ArrayOpBase.html#method-validate_filter_expr}{\code{arrayop::ArrayOpBase$validate_filter_expr()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{JoinOp$new(left, right, on_left, on_right, settings = list())}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-.raw_afl"></a>}}
\subsection{Method \code{.raw_afl()}}{
Return AFL when self used as an operand in another parent operation.

Implemented by calling to_afl_explicit with \code{selected_fields = self$selected}
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{JoinOp$.raw_afl()}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{drop_dims}}{Whether self dimensions will be dropped in parent operations
By default, dimensions are not dropped in parent operation
But in some operations, dimensions are dropped or converted to attributes
e.g. equi_join creates two artificial dimensions and discard any existing dimensions of two operands.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-.keep_dimensions"></a>}}
\subsection{Method \code{.keep_dimensions()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{JoinOp$.keep_dimensions()}\if{html}{\out{</div>}}
}

}
}
