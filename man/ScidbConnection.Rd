% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/connection.R
\name{ScidbConnection}
\alias{ScidbConnection}
\title{Create an array_op from a schema string with an optional array name}
\description{
Create an array_op from a schema string with an optional array name

Create an array_op from a schema string with an optional array name
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{ScidbConnection$new()}}
\item \href{#method-is_connected}{\code{ScidbConnection$is_connected()}}
\item \href{#method-connect}{\code{ScidbConnection$connect()}}
\item \href{#method-scidb_version}{\code{ScidbConnection$scidb_version()}}
\item \href{#method-conn_args}{\code{ScidbConnection$conn_args()}}
\item \href{#method-print}{\code{ScidbConnection$print()}}
\item \href{#method-query}{\code{ScidbConnection$query()}}
\item \href{#method-query_attrs}{\code{ScidbConnection$query_attrs()}}
\item \href{#method-execute}{\code{ScidbConnection$execute()}}
\item \href{#method-create_new_scidb_array}{\code{ScidbConnection$create_new_scidb_array()}}
\item \href{#method-array_op_from_name}{\code{ScidbConnection$array_op_from_name()}}
\item \href{#method-array_op_from_schema_str}{\code{ScidbConnection$array_op_from_schema_str()}}
\item \href{#method-array_op_from_afl}{\code{ScidbConnection$array_op_from_afl()}}
\item \href{#method-array_op_from_stored_afl}{\code{ScidbConnection$array_op_from_stored_afl()}}
\item \href{#method-array_op_from_df}{\code{ScidbConnection$array_op_from_df()}}
\item \href{#method-array_op_from_uploaded_df}{\code{ScidbConnection$array_op_from_uploaded_df()}}
\item \href{#method-array_op_from_build_literal}{\code{ScidbConnection$array_op_from_build_literal()}}
\item \href{#method-fread}{\code{ScidbConnection$fread()}}
\item \href{#method-clone}{\code{ScidbConnection$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ScidbConnection$new()}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{array_like}}{An array_op, schema string or existing scidb array name}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-is_connected"></a>}}
\if{latex}{\out{\hypertarget{method-is_connected}{}}}
\subsection{Method \code{is_connected()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ScidbConnection$is_connected()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-connect"></a>}}
\if{latex}{\out{\hypertarget{method-connect}{}}}
\subsection{Method \code{connect()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ScidbConnection$connect(connection_args = NULL)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-scidb_version"></a>}}
\if{latex}{\out{\hypertarget{method-scidb_version}{}}}
\subsection{Method \code{scidb_version()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ScidbConnection$scidb_version()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-conn_args"></a>}}
\if{latex}{\out{\hypertarget{method-conn_args}{}}}
\subsection{Method \code{conn_args()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ScidbConnection$conn_args()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-print"></a>}}
\if{latex}{\out{\hypertarget{method-print}{}}}
\subsection{Method \code{print()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ScidbConnection$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-query"></a>}}
\if{latex}{\out{\hypertarget{method-query}{}}}
\subsection{Method \code{query()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ScidbConnection$query(afl_str)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-query_attrs"></a>}}
\if{latex}{\out{\hypertarget{method-query_attrs}{}}}
\subsection{Method \code{query_attrs()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ScidbConnection$query_attrs(afl_str)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-execute"></a>}}
\if{latex}{\out{\hypertarget{method-execute}{}}}
\subsection{Method \code{execute()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ScidbConnection$execute(afl_str)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-create_new_scidb_array"></a>}}
\if{latex}{\out{\hypertarget{method-create_new_scidb_array}{}}}
\subsection{Method \code{create_new_scidb_array()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ScidbConnection$create_new_scidb_array(name, schema_template, .temp = FALSE)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-array_op_from_name"></a>}}
\if{latex}{\out{\hypertarget{method-array_op_from_name}{}}}
\subsection{Method \code{array_op_from_name()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ScidbConnection$array_op_from_name(array_name)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-array_op_from_schema_str"></a>}}
\if{latex}{\out{\hypertarget{method-array_op_from_schema_str}{}}}
\subsection{Method \code{array_op_from_schema_str()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ScidbConnection$array_op_from_schema_str(schema_str)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-array_op_from_afl"></a>}}
\if{latex}{\out{\hypertarget{method-array_op_from_afl}{}}}
\subsection{Method \code{array_op_from_afl()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ScidbConnection$array_op_from_afl(afl_str)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-array_op_from_stored_afl"></a>}}
\if{latex}{\out{\hypertarget{method-array_op_from_stored_afl}{}}}
\subsection{Method \code{array_op_from_stored_afl()}}{
Create a persistent array_op by storing AFL as an array
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ScidbConnection$array_op_from_stored_afl(
  afl_str,
  save_array_name = NULL,
  .temp = FALSE,
  .gc = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{.temp}}{Whether to create a temporary scidb array.
Only effective when \code{save_array_name = NULL}}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-array_op_from_df"></a>}}
\if{latex}{\out{\hypertarget{method-array_op_from_df}{}}}
\subsection{Method \code{array_op_from_df()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ScidbConnection$array_op_from_df(
  df,
  template = NULL,
  build_or_upload_threshold = 8000L,
  build_dim_spec = .random_field_name(),
  skip_scidb_schema_check = FALSE,
  force_template_schema = FALSE,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-array_op_from_uploaded_df"></a>}}
\if{latex}{\out{\hypertarget{method-array_op_from_uploaded_df}{}}}
\subsection{Method \code{array_op_from_uploaded_df()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ScidbConnection$array_op_from_uploaded_df(
  df,
  template = NULL,
  name = utility$random_array_name(),
  force_template_schema = FALSE,
  upload_by_vector = FALSE,
  .use_aio_input = FALSE,
  .temp = FALSE,
  .gc = TRUE
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-array_op_from_build_literal"></a>}}
\if{latex}{\out{\hypertarget{method-array_op_from_build_literal}{}}}
\subsection{Method \code{array_op_from_build_literal()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ScidbConnection$array_op_from_build_literal(
  df,
  template = NULL,
  build_dim_spec = utility$random_field_name(),
  force_template_schema = FALSE,
  skip_scidb_schema_check = FALSE
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-fread"></a>}}
\if{latex}{\out{\hypertarget{method-fread}{}}}
\subsection{Method \code{fread()}}{
Get a transient array_op by loading a file with aio_input

Mimic data.table::fread
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ScidbConnection$fread(
  file_path,
  template = NULL,
  header = TRUE,
  sep = "\\t",
  col.names = NULL,
  mutate_fields = NULL,
  auto_dcast = FALSE,
  nrow = 10L,
  instances = NULL,
  .aio_settings = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{auto_dcast}}{logical, default F. If TRUE, all non-string fields are
dcast'ed with `dcast(ax, int64(null)), where ax is the 0-indexed mapping
attribute name (e.g. a0, a1, etc), and int64 is the template field type}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ScidbConnection$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
