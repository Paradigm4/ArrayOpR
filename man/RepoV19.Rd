% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/repo_v19.R
\name{RepoV19}
\alias{RepoV19}
\title{RepoBase class manages ArrayOp objects in one scidb installation}
\description{
A repository for scidb arrays and derived ArrayOp objects that reside in one scidb installation
}
\details{
RepoBase is the base class of scidb-version-specific Repo classes.
Common ogic/behaviors across all supported scidb versions are placed here.
Version-specific logic/behaviors should be implemented in RepoBase sub-classes.
}
\section{Super class}{
\code{\link[arrayop:Repo]{arrayop::Repo}} -> \code{RepoV19}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{RepoV19$new()}}
\item \href{#method-ArrayOp}{\code{RepoV19$ArrayOp()}}
\item \href{#method-clone}{\code{RepoV19$clone()}}
}
}
\if{html}{
\out{<details ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="arrayop" data-topic="Repo" data-id=".create_array">}\href{../../arrayop/html/Repo.html#method-.create_array}{\code{arrayop::Repo$.create_array()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="arrayop" data-topic="Repo" data-id=".remove_array">}\href{../../arrayop/html/Repo.html#method-.remove_array}{\code{arrayop::Repo$.remove_array()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="arrayop" data-topic="Repo" data-id=".remove_array_versions">}\href{../../arrayop/html/Repo.html#method-.remove_array_versions}{\code{arrayop::Repo$.remove_array_versions()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="arrayop" data-topic="Repo" data-id="build_or_upload_df">}\href{../../arrayop/html/Repo.html#method-build_or_upload_df}{\code{arrayop::Repo$build_or_upload_df()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="arrayop" data-topic="Repo" data-id="execute">}\href{../../arrayop/html/Repo.html#method-execute}{\code{arrayop::Repo$execute()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="arrayop" data-topic="Repo" data-id="get_array">}\href{../../arrayop/html/Repo.html#method-get_array}{\code{arrayop::Repo$get_array()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="arrayop" data-topic="Repo" data-id="limit">}\href{../../arrayop/html/Repo.html#method-limit}{\code{arrayop::Repo$limit()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="arrayop" data-topic="Repo" data-id="load_arrayop_from_scidb">}\href{../../arrayop/html/Repo.html#method-load_arrayop_from_scidb}{\code{arrayop::Repo$load_arrayop_from_scidb()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="arrayop" data-topic="Repo" data-id="load_arrayops_from_config">}\href{../../arrayop/html/Repo.html#method-load_arrayops_from_config}{\code{arrayop::Repo$load_arrayops_from_config()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="arrayop" data-topic="Repo" data-id="load_arrayops_from_scidb_namespace">}\href{../../arrayop/html/Repo.html#method-load_arrayops_from_scidb_namespace}{\code{arrayop::Repo$load_arrayops_from_scidb_namespace()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="arrayop" data-topic="Repo" data-id="nrow">}\href{../../arrayop/html/Repo.html#method-nrow}{\code{arrayop::Repo$nrow()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="arrayop" data-topic="Repo" data-id="query">}\href{../../arrayop/html/Repo.html#method-query}{\code{arrayop::Repo$query()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="arrayop" data-topic="Repo" data-id="register_arrayops">}\href{../../arrayop/html/Repo.html#method-register_arrayops}{\code{arrayop::Repo$register_arrayops()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="arrayop" data-topic="Repo" data-id="save_as_array">}\href{../../arrayop/html/Repo.html#method-save_as_array}{\code{arrayop::Repo$save_as_array()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="arrayop" data-topic="Repo" data-id="semi_join">}\href{../../arrayop/html/Repo.html#method-semi_join}{\code{arrayop::Repo$semi_join()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="arrayop" data-topic="Repo" data-id="upload_df">}\href{../../arrayop/html/Repo.html#method-upload_df}{\code{arrayop::Repo$upload_df()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Initialize function.

Create a new Repo instance

Do NOT call this \code{initialize} function directly. Call \code{newRepo} instead to get a new Repo instance.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RepoV19$new(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{namespace}}{The default namespace}

\item{\code{dbAccess}}{A DbAccess instantance that manages scidb connection}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ArrayOp"></a>}}
\if{latex}{\out{\hypertarget{method-ArrayOp}{}}}
\subsection{Method \code{ArrayOp()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RepoV19$ArrayOp(...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{RepoV19$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
